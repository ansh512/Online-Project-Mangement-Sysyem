<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Instructor</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <style>
      body {
        height: 100%;
        margin: 0;
        padding: 0;
        width: 100%;
      }

      /*grid defination */
      .grid-container {
        min-height: 100vh;
        display: grid;
        grid-template-columns: 0.8fr 5fr;
        grid-template-rows: auto 1fr auto;
      }
      .header {
        display: flex;
        justify-content: center;
        align-items: baseline;
        grid-column: 1 / span 2;
        background-color: #004cffc7;
        color: white;
        padding: 0.5rem;
        position:relative;
        gap: 75rem;
        border-radius: 10px;
      }
      .sidebar {
        grid-row: 2 / span 1;
        background-color: #f8f9fa20;
        padding: 1rem;
      }
      .main {
        grid-row: 2 / span 1;
        grid-column: 2 / span 1;
        padding: 1rem;
      }
      .footer {
        grid-column: 1 / span 2;
        background-color: rgba(79, 112, 171, 0.569);
        color: white;
        padding: 1rem;
        text-align: center;
      }

      /* sidebar style */
      .nav-item {
        margin-bottom: 10px;
      }
      .nav-link {
        display: block;
        width: 80%;
        padding: 10px;
        text-decoration: none;
        color: black;
        background-color: #f7f7f7;
        border-radius: 1rem;
      }
      .nav-link.active {
        background-color: #007bff;
        color: white;
      }

    </style>
  </head>

  <body>
    <div class="grid-container">

      <div class="header">
        <div><h1 id = "headTitle">TU_Labs</h1></div>
        <div><select name = "user" style="border:none;box-shadow:none;" id="user-menu">
          <option value="" disabled selected><%= user %></option>
          <option value="/login/Instructor">My Courses</option>
          <option value="/logout">Logout</option>
        </select></div>
      </div>

      <div class="sidebar">
        <p><%=course%></p>
        <ul class="nav flex-column">
          <li class="nav-item">
            <a class="nav-link" href="/login/Instructor/<%=course %>">Post</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/login/Instructor/<%=course %>/grade">Submissions</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/login/Instructor/<%=course %>/report">Reports</a>
          </li>
        </ul>
      </div>

      <div class="main">
        <span>TOTAL STUDENT: <%=totalStudent%></span>
        <span style="margin-left: 50px;">TOTAL Assignments: <%=totalAssignment%></span>

        <canvas id="myChart" style="width:100%;max-width:700px;height:200px; margin:20px">></canvas>
        <div>
          <select id="students" name="students" onchange="populategraph()">
            <option value="">Select student</option>
            <% students.forEach(function(student) { %>
              <option value="<%= student._id %>"><%= student.roll %></option>
            <% }) %>
          </select>
        </div>
        <div id="chart-container">
          
        </div>
        
      </div>

      <div class="footer">
          <p>&copy; 2023 anubhavbinit</p>
      </div>

    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
          var navLinks = document.querySelectorAll('.nav-link');
          navLinks.forEach(function(navLink) {
            navLink.addEventListener('click', function() {
              navLinks.forEach(function(link) {
                link.classList.remove('active');
              });
              this.classList.add('active');
            });
          });
        });
        function confirmLogout() {
          if (confirm("Are you sure you want to log out?")) {
            window.location.href = "/logout";
          }
        }

        var userMenu = document.getElementById('user-menu');
        userMenu.addEventListener('change', function() {
          var selectedValue = this.value;
          if (selectedValue == "/logout") {
            confirmLogout();
          }else{
            window.location.href = selectedValue;
          }
        });

        document.addEventListener('DOMContentLoaded', () => {
          try {
            fetch('/login/Instructor/<%=course%>/data')
            .then(response => response.json())
            .then(data => {
              const ctx = document.getElementById('myChart').getContext('2d');
              const chart = new Chart(ctx, {
                type: 'bar',
                data: {
                  labels: data.labels,
                  datasets: [{
                    label: 'Assignments',
                    data: data.data,
                    backgroundColor: 'rgb(255, 99, 13)',
                    borderColor: 'rgb(255, 99, 132)',
                    tension: 0.1
                  }]
                },
                options: {
                scales: {
                    y: {
                        suggestedMin: 0,
                        suggestedMax: data.totalStudents,
                        stepSize: 1
                    }
                }
              }
              });
            })
            .catch(error => console.error(error));

          } catch (error) {
            console.error('An error occurred:', error);
          }
        });

        function populategraph() {
          const datasetColors = {
            "Submitted": 'rgb(54, 162, 235)',
            "Late Submission": 'rgb(255, 99, 132)',
            "Pending": 'rgb(255, 205, 86)'
          };
          var dropdown = document.getElementById("students");
          var itemId = dropdown.value;

          fetch(`/login/Instructor/<%=course%>/data/${itemId}`)
            .then(response => response.json())
            .then(data => {
              const chartContainer = document.getElementById('chart-container');
              chartContainer.innerHTML = '<canvas id="myChart2" ></canvas>'; 
              const ctx = document.getElementById('myChart2').getContext('2d');
              const chart = new Chart(ctx, {
                type: 'bar',
                data: {
                  labels: data.labels,
                  datasets: [{
                    label: 'submsissions',
                    data: data.data,
                    backgroundColor: [
                      datasetColors["Submitted"],
                      datasetColors["Late Submission"],
                      datasetColors["Pending"]
                    ],
                    borderColor: 'rgb(255, 99, 132)',
                    tension: 0.1
                  }]
                },
                options: {
                  scales: {
                    y: {
                        suggestedMin: 0,
                        suggestedMax: data.totalAssignments,
                        stepSize: 1
                    }
                }
                }
              });
            })
            .catch(error => console.error(error));
        }
    </script>
  </body>
</html>
